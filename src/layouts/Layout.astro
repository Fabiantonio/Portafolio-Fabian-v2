---
interface Props {
  title: string;
}

const { title } = Astro.props;

import "@fontsource-variable/onest";
import { ViewTransitions } from "astro:transitions";
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta property="og:title" content="Portfolio de Fabian Casas" />
    <meta
      property="og:description"
      content="Un vistazo al trabajo de Fabian Casas en desarrollo web y diseÃ±o."
    />
    <meta property="og:image" content="/portfolio_preview.png" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Portfolio de Fabian Casas" />
    <meta
      name="twitter:description"
      content="Explora proyectos y habilidades de Fabian Casas."
    />
    <meta name="twitter:image" content="/portfolio_preview.png" />
    <meta name="description" content="Portfolio de Fabian Casas" />
    <meta name="viewport" content="width=device-width" />

    <link rel="icon" type="image/x-icon" href="/favicon.svg" />
    <ViewTransitions />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="dark:bg-[#0e0e0e] bg-[#f9f9f9]">
    <slot />
  </body>
</html>

<script>
  import { initCursor, disposeCursor} from "ipad-cursor";
  initCursor();
  document.addEventListener("astro:page-load", () => {
    disposeCursor();
    initCursor();
  });
</script>

<script is:inline>
  (function () {
    const themePreference = localStorage.getItem("theme") || "system";
    const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");
    const isDark =
      themePreference === "dark" ||
      (themePreference === "system" && matchMedia.matches);

    document.documentElement.classList.toggle("dark", isDark);
  })();
</script>

<style is:global>
  html {
    font-family: "Onest Variable", system-ui;
  }

  [data-cursor="block"] {
    cursor: none !important;
  }
</style>
